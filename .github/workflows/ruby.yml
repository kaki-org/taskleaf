name: Build

#プルリクエスト作成時に実行(他にもpush時など設定できます)
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - staging

concurrency:
  group: taskleaf-${{ github.event.pull_request.head.ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  rspec_job:
    #ubuntu環境で動かします
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:11.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      chrome:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
          - 5900:5900
        options: --shm-size=2g

    steps:
      - name: checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v3
      - name: checkout pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Ruby version
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      - name: Use Node.js 16.19.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.0

      - name: Setup bundler
        run: gem install bundler

      - name: bundle install
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
      - name: yarn install
        run: yarn install --check-files
      - name: rubocop
        run: bundle exec rubocop
      - name: tmp cache clear
        run: |
          bundle exec rails tmp:cache:clear

      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Run RSpec
        run: bundle exec rspec
        env:
          TZ: "/usr/share/zoneinfo/Asia/Tokyo"
          LANG: "ja_JP.UTF-8"
          LC_ALL: "C.UTF-8"
          LANGUAGE: "ja_JP.UTF-8"
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub    #追加、どのコンテナのブラウザを使用するか指定
      - name: Codecov
        uses: codecov/codecov-action@v3.1.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage # このディレクトリに、テスティングツールによるカバレッジレポートファイルが出力される想定
